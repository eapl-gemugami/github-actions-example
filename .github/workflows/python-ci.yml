name: Python CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, edited, synchronize]

jobs:
  check-for-cc:
    runs-on: ubuntu-latest
    steps:
      - name: check-for-cc
        id: check-for-cc
        uses: agenthunt/conventional-commit-checker-action@v2.0.0
        
  test-and-lint:
    runs-on: ubuntu-latest  # GitHub-hosted runner
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:    
      - name: Checkout code
        uses: actions/checkout@v4  # Fetches your repo

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8  # Testing & linting tools

      - name: Run Linter (flake8)
        run: flake8 .

      - name: Run Tests (pytest)
        run: pytest

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: failure()  # Only upload if tests fail
        with:
          name: test-results
          path: test-reports/  # If pytest generates JUnit XML reports
